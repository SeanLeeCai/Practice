{
    "task": [
        {
            "question_title": "2015-07-16[鼠标移入移出改变样式]",
            "example_picture": [
                "http://7xkex2.com1.z0.glb.clouddn.com/2015-07-16.gif",
                "http://7xkex2.com1.z0.glb.clouddn.com/2015-07-16_02.gif"
            ],
            "date": "0716"
        },
        {
            "question_title": "2015-07-17[JS提起格式化URL]",
            "question_explain": [
                "这样一个URL：http://item.taobao.com/item.htm?a=1&b=2&c=&d=xxx&e ，请写一段JS程序提取URL中的各个GET参数(参数名和参数个数不确定)，将其按key-value形式返回到一个json结构中，如{a:'1',b:'2', c:'', d:'xxx', e:undefined}"
            ],
            "date": "0717"
        },
        {
            "question_title": "2015-07-18[判定一个对象是否为数组]",
            "question_explain": [
                "JavaScript的数组是具有特殊行为的对象，而且封装了许多便捷的操作方法。所以给出一个未知对象，判断其是否为数组往往十分有效。写一个工具函数，判断一个未知对象是否为数组，要求尽可能多的适应JS（EC3，EC5）运行环境。"
            ],
            "date": "0718"
        },
        {
            "question_title": "2015-07-19[Fisher-Yates乱序算法]",
            "question_explain": [
                "生活中需要用到乱序的地方很多，比如随机洗牌，随机中奖，音乐列表随机更新。要求实现一个随机打乱函数shuffle()，执行效果如下：",
                "[1,2,3,4,5,6,7,8,9,10].shuffle();",
                "[2,4,10,9,5,3,1,8,7,6]"
            ],
            "date": "0719"
        },
        {
            "question_title": "2015-07-20[点击列表显示当前索引]",
            "question_explain": [
                "一个列表，如何实现点击每一列的时候alert其index，练习使用理解闭包"
            ],
            "date": "0720"
        },
        {
            "question_title": "2015-07-21[字符转义，XSS预防]",
            "question_explain": [
                "为了保证页面输出安全，我们经常需要对一些特殊的字符进行转义，来预防XSS攻击，请写一个函数escapeHtml，将&lt;(左尖括号), &gt;(右尖括号), &amp;,&quot;(引号),进行转义。理解HTML实体"
            ],
            "date": "0721"
        },
        {
            "question_title": "2015-07-22[数组的简单面向对象练习]",
            "question_explain": [
                "创建一个班级对象，可以新添学生，班中每个学生有名字和成绩，提供一个按照学生成绩对班级同学进行排名的方法，以及一个计算班级同学平均成绩的方法。"
            ],
            "date": "0722"
        },
        {
            "question_title": "2015-07-23[列表数据结构学习]",
            "question_explain": [
                "封装一个列表类，使其实现如下功能：",
                "listSize（属性）：查看列表元素个数，",
                "pos（属性）：列表元素的当前位置，",
                "length（方法）：返回列表中元素的个数，",
                "clear（方法）：清空列表中的所有元素",
                "display(方法)：显示列表内容",
                "find(方法)：找到某个元素在哪个位置",
                "contains(方法)：是否包含某个元素",
                "insert(方法)：在现有元素后插入新元素",
                "append(方法)：在列表的末尾添加新元素",
                "remove(方法)：从列表中删除元素",
                "front(方法)：将列表的当前位置移动到开头",
                "end(方法)：将列表当前位置移动到末尾",
                "prev(方法)：指针位置前移",
                "next(方法)：指针位置后移",
                "currPos(方法)：指针当前位置",
                "moveTo(方法)：移动指针至某个位置",
                "getElement(方法)：返回当前位置的元素"
            ],
            "date": "0723"
        },
        {
            "question_title": "2015-07-24[jQuery瀑布流]",
            "question_explain": [
                "运用jQuery制作瀑布流展示页，重点在绝对定位理解和滚动加载",
                "参考资料：<a href='http://www.jikexueyuan.com/course/264.html'>jQuery瀑布流</a>"
            ],
            "date": "0724"
        },
        {
            "question_title": "2015-07-25[基础笔试题两道]",
            "question_explain": [
                "点开我的链接进行查看"
            ],
            "date": "0725"
        },
        {
            "question_title": "2015-07-30[DOM节点查找]",
            "question_explain": [
                "查找两个节点的最近的一个共同父节点，可以包括节点自身。oNode1和oNode2在同一个文档中，且不会为相同的节点。（发散：若是给出任意个节点让求最近公共父节点呢？）"
            ],
            "date": "0730"
        },
        {
            "question_title": "2015-07-31[修改this指向]",
            "question_explain": [
                "封装函数f，使f的this指向指定的对象。输入栗子：",
                "bindThis(function(a, b) {return this.test + a + b}, {test: 1})(2, 3)",
                "输出栗子：6"
            ],
            "date": "0731"
        },
        {
            "question_title": "2015-08-01[获取字符串的长度]",
            "question_explain": [
                "要求构造一个strLength(s, bUnicode255For1)方法，如果第二个参数 bUnicode255For1 === true，则所有字符长度为1，否则如果字符Unicode编码>255则长度为2。",
                "输入栗子: strLength('hello world, 你好世界', false)",
                "输出栗子: 21"
            ],
            "date": "0801"
        },
        {
            "question_title": "2015-08-02[表格信息排序]",
            "question_explain": [
                "如下图，请实现表格信息的排序功能，当点击表头的属性区域，将表格信息进行排序切换功能，即第一次点击为降序排序，再一次点击进行升序排序。"
            ],
            "example_picture": [
                "http://7xkex2.com1.z0.glb.clouddn.com/2015-08-02.png"
            ],
            "date": "0802"
        },
        {
            "question_title": "2015-08-11[强迫症头像]",
            "question_explain": [
                "如下图，将你的QQ or 微信头像右上角加上红色的数字，类似于微信未读信息数量那种提示效果",
                "要求至少使用三种方式实现"
            ],
            "example_picture": [
                "http://7xkex2.com1.z0.glb.clouddn.com/2015-08-11强迫症头像.png"
            ],
            "date": "0811"
        },
        {
            "question_title": "2015-08-12[验证码，激活码，优惠券js解决方案思考]",
            "question_explain": [
                "有许多应用场景需要一些随机码，比如限时促销的优惠码，软件安装的激活码，用户登录的验证码，用javascript如何生成200个随机码。保证健壮性（不可猜，不可重复，不便于记忆）"
            ],
            "date": "0812"
        },
        {
            "question_title": "2015-08-15[三列布局]",
            "question_explain": [
                "回顾经典布局 圣杯布局与双飞翼布局",
                "参考：<a href='http://www.dqqd.me/flying-wing/'>双飞翼布局</a>"
            ],
            "date": "0815"
        },
        {
            "question_title": "2015-08-16[XMLHttpRequest理解]",
            "question_explain": [
                "如题，了解是什么，怎样完整地执行GET POST请求(原生JS)",
                "最好用函数的方式区分书写get和post区别 如：",
                "function(getPost,url,data,callback){",
                "&nbsp;&nbsp;&nbsp;&nbsp;公共部分...",
                "&nbsp;&nbsp;&nbsp;&nbsp;if(getPost === 'GET')&nbsp;{...}",
                "&nbsp;&nbsp;&nbsp;&nbsp;公共部分...",
                "&nbsp;&nbsp;&nbsp;&nbsp;if(getPost === 'POST')&nbsp;{...} ",
                "&nbsp;&nbsp;&nbsp;&nbsp;公共部分...",
                "}",
                "建议后台采用nodejs http.Server （基于事件的 HTTP 服务器）实现"
            ],
            "date": "0816"
        },
        {
            "question_title": "2015-08-24[JS实现单向链表]",
            "question_explain": [
                "JS是弱类型语言,并没有明确的指针概念,而单向链表数据结构经常使用指针进行遍历,",
                "单向链表中结点中存在一个存放下一个结点的数据，只能单向进行遍历。",
                "现使用JS实现简单的单向链表：",
                "&nbsp;&nbsp;&nbsp;&nbsp;增加结点：list.addNode(data)",
                "&nbsp;&nbsp;&nbsp;&nbsp;删除结点：list.delNode(node)",
                "&nbsp;&nbsp;&nbsp;&nbsp;查询结点：list.getNode(nthNode)",
                "&nbsp;&nbsp;&nbsp;&nbsp;修改结点：list.setNode(nthNode,data)",
                "&nbsp;&nbsp;&nbsp;&nbsp;获取链表长度：list.length()",
                "&nbsp;&nbsp;&nbsp;&nbsp;(选做)将链表逆序：list.reverse()",
                "&nbsp;&nbsp;&nbsp;&nbsp;......"
            ],
            "date": "0824"
        },
        {
            "question_title": "2015-09-04[nodeJs文件存储]",
            "question_explain": [
                "经常在页面中需要上传文件（文档、图片等）如何在后端实现文件存储",
                "nodeJs实现，参考资料:<a href='http://blog.csdn.net/lfsfxy9/article/details/8870069'>node-formidable模块<a/>",
                "注意说明清除，前端的HTML结构form、input，与后台的对应关系、必要性等",
                "扩展：如何实现前端无刷新表单提交，参考资料:<a href='http://blog.csdn.net/zzq58157383/article/details/7718956'>jquery.form.js的ajaxSubmit</a>"
            ],
            "date": "0904"
        }
    ],
    "person": {
        "name1": "hywilliam",
        "name2": "JoeLucky",
        "name3": "SeanLee"
    }
}